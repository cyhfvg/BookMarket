<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

<script src="https://unpkg.com/axios@0.19.2/dist/axios.js"></script>

<script src="/js/config.js"></script>

<script src="/js/utils.js"></script>

<script type="text/javascript">
  let vm = new Vue({
    el: "#app",
    data() {
      return {
        alertText: '',
        axiosInstance: null,
        book: {},
        cols: 5,
        curPage: 1,
        isbnSearchFlag: false,
        total: 0,
        myPrice: 1,
        rows: 0,
        searchBooks: [],
        searchText: "",
      };
    },
    methods: {
      init: function () {
        let me = this;
        let protocol = window.location.protocol;
        let host = window.location.host;
        let port = window.location.port;
        let pathname = window.location.pathname;
      },
      /**
       * 查找按钮查找书籍信息
       */
      queryBook: function () {
        let me = this;
        let text = me.searchText;
        me.query(text, me.curPage);
      },
      /**
       * 分页功能
       */
      changePage: function(pageNum) {
        let me = this;
        me.curPage = pageNum;
        me.queryBook();
      },
      /**
       * 查找书籍信息
       */
      query: function (text, page) {
        let me = this;
        if (text === "") {
          return;
        }
        me.axiosInstance
          .post("/book/sell/searchBook", {
            text: text,
            page: page
          })
          .then((response) => {
            if (response.data.status === 0) {
              let result = response.data.result;
              console.log(result);
              // 书名查询 结果
              if (result.total !== undefined) {
                me.total = result.total;
                me.searchBooks = result.list;
                me.isbnSearchFlag = false;
              } else {
                // ISBN 查询 结果
                me.book = result;
                me.isbnSearchFlag = true;
              }
            } else {
              // 失败
              me.searchText = "";
            }
          });
      },
      /**
       * 渲染书名查找结果集时，每行数据
       */
      eachRowBooks: function (row) {
        let me = this;
        let cols = me.cols;
        let books = [];
        for (let i = 0; i < cols; i++) {
          books[i] = me.searchBooks[(row - 1) * cols + i];
        }
        return books;
      },
      objIsEmpty: function (obj) {
        for (let key in obj) {
          return false;
        }
        return true;
      },
      /**
       * 根据isbn获取书籍信息
       */
      getBookInfo: function (isbn) {
        let me = this;
        me.query(isbn);
      },
      /**
       * 设置显示区域 显示flag
       */
      showResults: function () {
        let me = this;
        me.isbnSearchFlag = false;
      },
      /**
       * 卖书
       */
      sell() {
        let me = this;
        let book = me.book;
        let myPrice = Math.floor(me.myPrice);

        let url = "/book/sell";
        let config = {
          book: {
            name: book.title,
            price: myPrice,
            isbn: book.isbn,
            author: book.author,
            pic: book.pic,
            description: book.summary,
          },
        };
        me.axiosInstance.post(url, config).then((response) => {
          console.log(response.data);
          if (response.data.success === true) {
            window.opener = null;
            window.open("", "_self");
            window.close();
          } else {
            me.alertText = '请刷新页面重新提交'
          }
        });
      },
    },
    beforeCreate() {
      // Todo: 验证身份
      // 从/js/utils.js中使用方法 验证身份
    },
    created() {
      // 设置axios实例的config
      this.axiosInstance = axios.create({
        baseURL: configValue.axiosBaseURL,
        timeout: 30000,
        headers: {
          "Content-Type": "application/json",
        },
      });
    },
    mounted() {
      // 数据初始化
      this.init();
    },
    watch: {
      /**
       * 当书名搜索结果集变化时，更新 渲染行数
       */
      searchBooks(newVal) {
        let me = this;
        me.rows = me.searchBooks.length / me.cols;
      },
      /**
       * 根据 搜索文本变化设置 搜索结果显示
       */
      searchText(newVal) {
        let me = this;
        let regexp = /^\d+$/g;
        if (regexp.exec(newVal) != null) {
          me.isbnSearchFlag = true;
        } else {
          me.isbnSearchFlag = false;
        }
      },
      /**
       * 我的定价
       */
      myPrice(newVal) {
        let me = this;
        if (newVal <= 0 || newVal > me.book.price * 100) {
          me.myPrice = 0;
        }
      },
    },
    computed: {
      remain: function () {
        let me = this;
        let len = me.searchBooks.length;
        let count = len - me.rows * me.cols;
        let remain = [];
        for (let i = 0; i < count; i++) {
          remain[i] = me.searchBooks[len - i - 1];
        }
        return remain;
      },
      /**
       * 总页数
       */
      totalPage: function() {
        let me = this;
        return Math.ceil(me.total / (me.rows * me.cols));
      }
    },
  });
</script>
